#!/bin/bash

# exit when any command fails
set -e
set -o pipefail

usage () {
	echo ""
	echo "Try 'backup --help' for more information"
	exit 1
}

# assumes that the veracrypt encrypted volume has been already created 

# where the veracrypt encrypted volume will be mounted
MOUNT_POINT=

# mount the encrypted veracrypt volume


# =====================================
# BACKUP ALGO

# path where the encrypted volume is located
BACKUP_LOCATION=./test/backup

# collect and compress the list of files onto the $backup_location/YYYY-MM-dd-HHmmss_backup
backup_filename=".$(date +%F-%H%M%S)_backup"

# list of all files and folders in the backup
FILES=(
	"./test/docs"
	"./test/vids"
	#./test/photos"
	#./test/backup"
)

EXCLUDED_FILES=(
	# Note: when excluding directories, make sure NOT to use the traililng
	# slash(/) at the end of the path

	""$BACKUP_LOCATION"/"$backup_filename".tgz"
	"./test/docs"	
	"./test/vids"
)

# TODO: test paths with spaces and characters that aren't POSIX standard


if [ ! -d "$BACKUP_LOCATION" ]; then
	echo "Backup location '"$BACKUP_LOCATION"' does not exist.">&2
	usage
fi

# check if array is empty

for file in "${FILES[@]}"; do
	if [ ! -d "$file" ]; then
		echo "Files "$file" do not exist.">&2
		usage
	fi
done


echo "Full backup started."

if [ "${#EXCLUDED_FILES[*]}" -eq 0 ]; then
	echo " tar czpvf "$BACKUP_LOCATION"/"$backup_filename".tgz ${FILES[*]} "
else
	# tar requires that all exluded files/directories are prefixed with --excluded	
	excluded_files_string=

	for excluded_file in "${EXCLUDED_FILES[@]}"; do	
		excluded_files_string="$excluded_files_string --exclude="$excluded_file" "
	done

	tar czpvf "$BACKUP_LOCATION"/"$backup_filename".tgz $excluded_files_string ${FILES[*]}

fi

echo "Full backup completed successfully."


# =====================================

# unmount the veracrypt encrypted volume



